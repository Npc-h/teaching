<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bsxy.teaching.mapper.TListenMapper">
  <resultMap id="BaseResultMap" type="com.bsxy.teaching.pojo.TListen">
    <id column="l_id" jdbcType="INTEGER" property="lId" />
    <result column="l_course_name" jdbcType="VARCHAR" property="lCourseName" />
    <result column="l_teacher" jdbcType="VARCHAR" property="lTeacher" />
    <result column="l_listen_person" jdbcType="VARCHAR" property="lListenPerson" />
    <result column="l_site" jdbcType="VARCHAR" property="lSite" />
    <result column="l_tag" jdbcType="CHAR" property="lTag" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    l_id, l_course_name, l_teacher, l_listen_person, l_site, l_tag
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_listen
    where l_id = #{lId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_listen
    where l_id = #{lId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bsxy.teaching.pojo.TListen">
    insert into t_listen (l_id, l_course_name, l_teacher, 
      l_listen_person, l_site, l_tag
      )
    values (#{lId,jdbcType=INTEGER}, #{lCourseName,jdbcType=VARCHAR}, #{lTeacher,jdbcType=VARCHAR}, 
      #{lListenPerson,jdbcType=VARCHAR}, #{lSite,jdbcType=VARCHAR}, #{lTag,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bsxy.teaching.pojo.TListen">
    insert into t_listen
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="lId != null">
        l_id,
      </if>
      <if test="lCourseName != null">
        l_course_name,
      </if>
      <if test="lTeacher != null">
        l_teacher,
      </if>
      <if test="lListenPerson != null">
        l_listen_person,
      </if>
      <if test="lSite != null">
        l_site,
      </if>
      <if test="lTag != null">
        l_tag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="lId != null">
        #{lId,jdbcType=INTEGER},
      </if>
      <if test="lCourseName != null">
        #{lCourseName,jdbcType=VARCHAR},
      </if>
      <if test="lTeacher != null">
        #{lTeacher,jdbcType=VARCHAR},
      </if>
      <if test="lListenPerson != null">
        #{lListenPerson,jdbcType=VARCHAR},
      </if>
      <if test="lSite != null">
        #{lSite,jdbcType=VARCHAR},
      </if>
      <if test="lTag != null">
        #{lTag,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bsxy.teaching.pojo.TListen">
    update t_listen
    <set>
      <if test="lCourseName != null">
        l_course_name = #{lCourseName,jdbcType=VARCHAR},
      </if>
      <if test="lTeacher != null">
        l_teacher = #{lTeacher,jdbcType=VARCHAR},
      </if>
      <if test="lListenPerson != null">
        l_listen_person = #{lListenPerson,jdbcType=VARCHAR},
      </if>
      <if test="lSite != null">
        l_site = #{lSite,jdbcType=VARCHAR},
      </if>
      <if test="lTag != null">
        l_tag = #{lTag,jdbcType=CHAR},
      </if>
    </set>
    where l_id = #{lId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bsxy.teaching.pojo.TListen">
    update t_listen
    set l_course_name = #{lCourseName,jdbcType=VARCHAR},
      l_teacher = #{lTeacher,jdbcType=VARCHAR},
      l_listen_person = #{lListenPerson,jdbcType=VARCHAR},
      l_site = #{lSite,jdbcType=VARCHAR},
      l_tag = #{lTag,jdbcType=CHAR}
    where l_id = #{lId,jdbcType=INTEGER}
  </update>


  <select id="verifyCourse" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_listen
    where l_course_name = #{cName,jdbcType=VARCHAR}
    AND l_listen_person = #{lName,jdbcType=VARCHAR}
  </select>



  <select id="selectCourseListen"  resultMap="BaseResultMap">
    select
    l_id, l_course_name, l_teacher, l_listen_person, l_site, (case when T.l_tag='0' then '否' when  T.l_tag='1' then '是' END) as l_tag
    from t_listen T
    where 1=1
    <if test="courseName !=null">
      AND  l_course_name LIKE CONCAT('%',#{courseName,jdbcType=VARCHAR},'%')
    </if>
    <if test="listenName !=null">
      AND  l_listen_person LIKE CONCAT('%',#{listenName,jdbcType=VARCHAR},'%')
    </if>
    LIMIT #{curr,jdbcType=INTEGER},#{limits,jdbcType=INTEGER}
  </select>


  <select id="selectCourseListenCount"  resultType="java.lang.Integer">
    select
    COUNT(*)
    from t_listen
    where 1=1
    <if test="courseName !=null">
      AND  l_course_name LIKE CONCAT('%',#{courseName,jdbcType=VARCHAR},'%')
    </if>
    <if test="listenName !=null">
      AND  l_listen_person LIKE CONCAT('%',#{listenName,jdbcType=VARCHAR},'%')
    </if>
  </select>


  <update id="updateEvaluate" parameterType="com.bsxy.teaching.pojo.TListen">
    update t_listen
    set l_tag = '1'
    where l_id = #{lID,jdbcType=INTEGER}
  </update>
</mapper>