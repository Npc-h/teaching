<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bsxy.teaching.mapper.TCourseMapper">
  <resultMap id="BaseResultMap" type="com.bsxy.teaching.pojo.TCourse">
    <id column="c_id" jdbcType="INTEGER" property="cId" />
    <result column="c_name" jdbcType="VARCHAR" property="cName" />
    <result column="c_teacher" jdbcType="VARCHAR" property="cTeacher" />
    <result column="c_site" jdbcType="VARCHAR" property="cSite" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    c_id, c_name, c_teacher, c_site
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_course
    where c_id = #{cId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_course
    where c_id = #{cId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bsxy.teaching.pojo.TCourse">
    insert into t_course (c_id, c_name, c_teacher, 
      c_site)
    values (#{cId,jdbcType=INTEGER}, #{cName,jdbcType=VARCHAR}, #{cTeacher,jdbcType=VARCHAR}, 
      #{cSite,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.bsxy.teaching.pojo.TCourse">
    insert into t_course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cId != null">
        c_id,
      </if>
      <if test="cName != null">
        c_name,
      </if>
      <if test="cTeacher != null">
        c_teacher,
      </if>
      <if test="cSite != null">
        c_site,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cId != null">
        #{cId,jdbcType=INTEGER},
      </if>
      <if test="cName != null">
        #{cName,jdbcType=VARCHAR},
      </if>
      <if test="cTeacher != null">
        #{cTeacher,jdbcType=VARCHAR},
      </if>
      <if test="cSite != null">
        #{cSite,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bsxy.teaching.pojo.TCourse">
    update t_course
    <set>
      <if test="cName != null">
        c_name = #{cName,jdbcType=VARCHAR},
      </if>
      <if test="cTeacher != null">
        c_teacher = #{cTeacher,jdbcType=VARCHAR},
      </if>
      <if test="cSite != null">
        c_site = #{cSite,jdbcType=VARCHAR},
      </if>
    </set>
    where c_id = #{cId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bsxy.teaching.pojo.TCourse">
    update t_course
    set c_name = #{cName,jdbcType=VARCHAR},
      c_teacher = #{cTeacher,jdbcType=VARCHAR},
      c_site = #{cSite,jdbcType=VARCHAR}
    where c_id = #{cId,jdbcType=INTEGER}
  </update>

  <select id="selectCourse"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_course
    <if test="courseName !=null">
      where  c_name LIKE CONCAT('%',#{courseName,jdbcType=VARCHAR},'%')
    </if>
    LIMIT #{curr,jdbcType=INTEGER},#{limits,jdbcType=INTEGER}
  </select>


  <select id="selectCountCourse"  resultType="java.lang.Integer">
    select
    COUNT(*)
    from t_course
    <if test="courseName !=null">
      where  c_name LIKE CONCAT('%',#{courseName,jdbcType=VARCHAR},'%')
    </if>
  </select>
</mapper>